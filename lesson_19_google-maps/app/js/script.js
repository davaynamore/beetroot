"use strict";

var navForm = document.getElementById('navigator');
var addressFrom = document.getElementById('addressFrom');
var addressTo = document.getElementById('addressTo');
var drivingMode = document.getElementById('drivingMode');
var map;
var directionsService;
var directionsDisplay;
var markersArray = [];
navForm.addEventListener('submit', function (e) {
  e.preventDefault();
  clearOverlays();
  var start = addressFrom.value;
  var end = addressTo.value;
  var mode = drivingMode.value;
  start && end ? calcRoute(start, end, mode) : start ? findPoint(start) : end ? findPoint(end) : alert('Enter address');
});

function initMap() {
  directionsService = new google.maps.DirectionsService();
  directionsDisplay = new google.maps.DirectionsRenderer();
  var krem = {
    lat: 49.062785,
    lng: 33.4156805
  };
  map = new google.maps.Map(document.getElementById('map'), {
    zoom: 7,
    center: krem
  });
  directionsDisplay.setMap(map);
}

function findPoint(address) {
  var geocoder = new google.maps.Geocoder();
  var infowindow = new google.maps.InfoWindow();
  geocoder.geocode({
    'address': address
  }, function (results, status) {
    if (status == 'OK') {
      map.zoom = 12;
      map.setCenter(results[0].geometry.location);
      var marker = addMarker(results[0].geometry.location);
      infowindow.setContent(results[0].formatted_address);
      infowindow.open(map, marker);
    } else {
      console.log('Geocode was not successful for the following reason: ' + status);
    }
  });
}

function calcRoute(start, end, drivingMode) {
  directionsDisplay.setMap(map);
  var request = {
    origin: start,
    destination: end,
    travelMode: drivingMode
  };
  directionsService.route(request, function (result, status) {
    if (status == 'OK') {
      directionsDisplay.setDirections(result);
    }
  });
}

function addMarker(location) {
  var marker = new google.maps.Marker({
    position: location,
    map: map
  });
  markersArray.push(marker);
  return marker;
} // Removes the overlays from the map, but keeps them in the array


function clearOverlays() {
  directionsDisplay.setMap(null);

  if (markersArray) {
    for (var i in markersArray) {
      markersArray[i].setMap(null);
    }
  }
} // Shows any overlays currently in the array


function showOverlays() {
  if (markersArray) {
    for (var i in markersArray) {
      markersArray[i].setMap(map);
    }
  }
} // Deletes all markers in the array by removing references to them


function deleteOverlays() {
  if (markersArray) {
    for (var i in markersArray) {
      markersArray[i].setMap(null);
    }

    markersArray.length = 0;
  }
}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
