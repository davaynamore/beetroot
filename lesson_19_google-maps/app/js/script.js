"use strict";

var navForm = document.getElementById('navigator');
var addressFrom = document.getElementById('addressFrom');
var addressTo = document.getElementById('addressTo');
var drivingMode = document.getElementById('drivingMode');
navForm.addEventListener('submit', function (e) {
  e.preventDefault();
  var start = addressFrom.value;
  var end = addressTo.value;
  var mode = drivingMode.value;
  start && end ? calcRoute(start, end, mode) : start ? findPoint(start) : end ? findPoint(end) : alert('Enter address');
});
var map;
var directionsService;
var directionsDisplay;

function initMap() {
  directionsService = new google.maps.DirectionsService();
  directionsDisplay = new google.maps.DirectionsRenderer();
  var krem = {
    lat: 49.062785,
    lng: 33.4156805
  };
  map = new google.maps.Map(document.getElementById('map'), {
    zoom: 7,
    center: krem
  });
  directionsDisplay.setMap(map);
}

function findPoint(address) {
  var geocoder = new google.maps.Geocoder();
  var infowindow = new google.maps.InfoWindow();
  geocoder.geocode({
    'address': address
  }, function (results, status) {
    if (status == 'OK') {
      map.zoom = 12;
      map.setCenter(results[0].geometry.location);
      var marker = new google.maps.Marker({
        map: map,
        position: results[0].geometry.location
      });
      infowindow.setContent(results[0].formatted_address);
      infowindow.open(map, marker);
    } else {
      console.log('Geocode was not successful for the following reason: ' + status);
    }
  });
}

function calcRoute(start, end, drivingMode) {
  var request = {
    origin: start,
    destination: end,
    travelMode: drivingMode
  };
  directionsService.route(request, function (result, status) {
    if (status == 'OK') {
      directionsDisplay.setDirections(result);
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdC5qcyJdLCJuYW1lcyI6WyJuYXZGb3JtIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImFkZHJlc3NGcm9tIiwiYWRkcmVzc1RvIiwiZHJpdmluZ01vZGUiLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsInByZXZlbnREZWZhdWx0Iiwic3RhcnQiLCJ2YWx1ZSIsImVuZCIsIm1vZGUiLCJjYWxjUm91dGUiLCJmaW5kUG9pbnQiLCJhbGVydCIsIm1hcCIsImRpcmVjdGlvbnNTZXJ2aWNlIiwiZGlyZWN0aW9uc0Rpc3BsYXkiLCJpbml0TWFwIiwiZ29vZ2xlIiwibWFwcyIsIkRpcmVjdGlvbnNTZXJ2aWNlIiwiRGlyZWN0aW9uc1JlbmRlcmVyIiwia3JlbSIsImxhdCIsImxuZyIsIk1hcCIsInpvb20iLCJjZW50ZXIiLCJzZXRNYXAiLCJhZGRyZXNzIiwiZ2VvY29kZXIiLCJHZW9jb2RlciIsImluZm93aW5kb3ciLCJJbmZvV2luZG93IiwiZ2VvY29kZSIsInJlc3VsdHMiLCJzdGF0dXMiLCJzZXRDZW50ZXIiLCJnZW9tZXRyeSIsImxvY2F0aW9uIiwibWFya2VyIiwiTWFya2VyIiwicG9zaXRpb24iLCJzZXRDb250ZW50IiwiZm9ybWF0dGVkX2FkZHJlc3MiLCJvcGVuIiwiY29uc29sZSIsImxvZyIsInJlcXVlc3QiLCJvcmlnaW4iLCJkZXN0aW5hdGlvbiIsInRyYXZlbE1vZGUiLCJyb3V0ZSIsInJlc3VsdCIsInNldERpcmVjdGlvbnMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsT0FBTyxHQUFHQyxRQUFRLENBQUNDLGNBQVQsQ0FBd0IsV0FBeEIsQ0FBaEI7QUFDQSxJQUFNQyxXQUFXLEdBQUdGLFFBQVEsQ0FBQ0MsY0FBVCxDQUF3QixhQUF4QixDQUFwQjtBQUNBLElBQU1FLFNBQVMsR0FBR0gsUUFBUSxDQUFDQyxjQUFULENBQXdCLFdBQXhCLENBQWxCO0FBQ0EsSUFBTUcsV0FBVyxHQUFHSixRQUFRLENBQUNDLGNBQVQsQ0FBd0Is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TSxFQUFFMUMsS0FESztBQUViMkMsSUFBQUEsV0FBVyxFQUFFekMsR0FGQTtBQUdiMEMsSUFBQUEsVUFBVSxFQUFFaEQ7QUFIQyxHQUFkO0FBS0FZLEVBQUFBLGlCQUFpQixDQUFDcUMsS0FBbEIsQ0FBd0JKLE9BQXhCLEVBQWlDLFVBQVNLLE1BQVQsRUFBaUJqQixNQUFqQixFQUF5QjtBQUN6RCxRQUFJQSxNQUFNLElBQUksSUFBZCxFQUFvQjtBQUNuQnBCLE1BQUFBLGlCQUFpQixDQUFDc0MsYUFBbEIsQ0FBZ0NELE1BQWhDO0FBQ0E7QUFDRCxHQUpEO0FBS0EiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBuYXZGb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ25hdmlnYXRvcicpO1xyXG5jb25zdCBhZGRyZXNzRnJvbSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhZGRyZXNzRnJvbScpO1xyXG5jb25zdCBhZGRyZXNzVG8gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYWRkcmVzc1RvJyk7XHJcbmNvbnN0IGRyaXZpbmdNb2RlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2RyaXZpbmdNb2RlJyk7XHJcblxyXG5uYXZGb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChlKSA9PiB7XHJcblx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cdGNvbnN0IHN0YXJ0ID0gYWRkcmVzc0Zyb20udmFsdWU7XHJcblx0Y29uc3QgZW5kID0gYWRkcmVzc1RvLnZhbHVlO1xyXG5cdGNvbnN0IG1vZGUgPSBkcml2aW5nTW9kZS52YWx1ZTtcclxuXHRzdGFydCAmJiBlbmQgPyBjYWxjUm91dGUoc3RhcnQsIGVuZCwgbW9kZSkgOiBzdGFydCA/IGZpbmRQb2ludChzdGFydCkgOiAgZW5kID8gZmluZFBvaW50KGVuZCkgOiBhbGVydCgnRW50ZXIgYWRkcmVzcycpO1xyXG59KTtcclxuXHJcbmxldCBtYXA7XHJcbmxldCBkaXJlY3Rpb25zU2VydmljZTtcclxubGV0IGRpcmVjdGlvbnNEaXNwbGF5O1xyXG5cclxuZnVuY3Rpb24gaW5pdE1hcCgpIHtcclxuXHRkaXJlY3Rpb25zU2VydmljZSA9IG5ldyBnb29nbGUubWFwcy5EaXJlY3Rpb25zU2VydmljZSgpO1xyXG5cdGRpcmVjdGlvbnNEaXNwbGF5ID0gbmV3IGdvb2dsZS5tYXBzLkRpcmVjdGlvbnNSZW5kZXJlcigpO1xyXG5cdGNvbnN0IGtyZW0gPSB7bGF0OiA0OS4wNjI3ODUsIGxuZzogMzMuNDE1NjgwNX07XHJcblx0bWFwID0gbmV3IGdvb2dsZS5tYXBzLk1hcChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFwJyksIHt6b29tOiA3LCBjZW50ZXI6IGtyZW19KTtcclxuXHRkaXJlY3Rpb25zRGlzcGxheS5zZXRNYXAobWFwKTtcclxufVxyXG5cclxuZnVuY3Rpb24gZmluZFBvaW50KGFkZHJlc3MpIHtcclxuXHRjb25zdCBnZW9jb2RlciA9IG5ldyBnb29nbGUubWFwcy5HZW9jb2RlcigpO1xyXG5cdGNvbnN0IGluZm93aW5kb3cgPSBuZXcgZ29vZ2xlLm1hcHMuSW5mb1dpbmRvdztcclxuXHRnZW9jb2Rlci5nZW9jb2RlKCB7ICdhZGRyZXNzJzogYWRkcmVzc30sIGZ1bmN0aW9uKHJlc3VsdHMsIHN0YXR1cykge1xyXG5cdFx0aWYgKHN0YXR1cyA9PSAnT0snKSB7XHJcblx0XHRcdG1hcC56b29tID0gMTI7XHJcblx0XHRcdG1hcC5zZXRDZW50ZXIocmVzdWx0c1swXS5nZW9tZXRyeS5sb2NhdGlvbik7XHJcblx0XHRcdGNvbnN0IG1hcmtlciA9IG5ldyBnb29nbGUubWFwcy5NYXJrZXIoe1xyXG5cdFx0XHRcdG1hcDogbWFwLFxyXG5cdFx0XHRcdHBvc2l0aW9uOiByZXN1bHRzWzBdLmdlb21ldHJ5LmxvY2F0aW9uXHJcblx0XHRcdH0pO1xyXG5cdFx0XHRpbmZvd2luZG93LnNldENvbnRlbnQocmVzdWx0c1swXS5mb3JtYXR0ZWRfYWRkcmVzcyk7XHJcblx0XHRcdGluZm93aW5kb3cub3BlbihtYXAsIG1hcmtlcik7XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHRjb25zb2xlLmxvZygnR2VvY29kZSB3YXMgbm90IHN1Y2Nlc3NmdWwgZm9yIHRoZSBmb2xsb3dpbmcgcmVhc29uOiAnICsgc3RhdHVzKTtcclxuXHRcdH1cclxuXHR9KTtcclxufVxyXG5cclxuXHJcbmZ1bmN0aW9uIGNhbGNSb3V0ZShzdGFydCwgZW5kLCBkcml2aW5nTW9kZSkge1xyXG5cdHZhciByZXF1ZXN0ID0ge1xyXG5cdFx0b3JpZ2luOiBzdGFydCxcclxuXHRcdGRlc3RpbmF0aW9uOiBlbmQsXHJcblx0XHR0cmF2ZWxNb2RlOiBkcml2aW5nTW9kZVxyXG5cdH07XHJcblx0ZGlyZWN0aW9uc1NlcnZpY2Uucm91dGUocmVxdWVzdCwgZnVuY3Rpb24ocmVzdWx0LCBzdGF0dXMpIHtcclxuXHRcdGlmIChzdGF0dXMgPT0gJ09LJykge1xyXG5cdFx0XHRkaXJlY3Rpb25zRGlzcGxheS5zZXREaXJlY3Rpb25zKHJlc3VsdCk7XHJcblx0XHR9XHJcblx0fSk7XHJcbn0iXSwiZmlsZSI6InNjcmlwdC5qcyJ9
